// automatically generated by the FlatBuffers compiler, do not modify

package com.ecs160.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GameConstants extends Table {
  public static GameConstants getRootAsGameConstants(ByteBuffer _bb) { return getRootAsGameConstants(_bb, new GameConstants()); }
  public static GameConstants getRootAsGameConstants(ByteBuffer _bb, GameConstants obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public GameConstants __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String host() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer hostAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String mapName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer mapNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public int playerCount() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createGameConstants(FlatBufferBuilder builder,
      int hostOffset,
      int mapNameOffset,
      int playerCount) {
    builder.startObject(3);
    GameConstants.addPlayerCount(builder, playerCount);
    GameConstants.addMapName(builder, mapNameOffset);
    GameConstants.addHost(builder, hostOffset);
    return GameConstants.endGameConstants(builder);
  }

  public static void startGameConstants(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addHost(FlatBufferBuilder builder, int hostOffset) { builder.addOffset(0, hostOffset, 0); }
  public static void addMapName(FlatBufferBuilder builder, int mapNameOffset) { builder.addOffset(1, mapNameOffset, 0); }
  public static void addPlayerCount(FlatBufferBuilder builder, int playerCount) { builder.addInt(2, playerCount, 0); }
  public static int endGameConstants(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishGameConstantsBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

