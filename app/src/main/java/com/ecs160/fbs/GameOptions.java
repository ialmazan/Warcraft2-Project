// automatically generated by the FlatBuffers compiler, do not modify

package com.ecs160.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GameOptions extends Table {
  public static GameOptions getRootAsGameOptions(ByteBuffer _bb) { return getRootAsGameOptions(_bb, new GameOptions()); }
  public static GameOptions getRootAsGameOptions(ByteBuffer _bb, GameOptions obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public GameOptions __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public byte difficulty() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte maxPlayers() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createGameOptions(FlatBufferBuilder builder,
      byte difficulty,
      byte max_players) {
    builder.startObject(2);
    GameOptions.addMaxPlayers(builder, max_players);
    GameOptions.addDifficulty(builder, difficulty);
    return GameOptions.endGameOptions(builder);
  }

  public static void startGameOptions(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addDifficulty(FlatBufferBuilder builder, byte difficulty) { builder.addByte(0, difficulty, 0); }
  public static void addMaxPlayers(FlatBufferBuilder builder, byte maxPlayers) { builder.addByte(1, maxPlayers, 0); }
  public static int endGameOptions(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishGameOptionsBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

