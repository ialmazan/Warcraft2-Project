// automatically generated by the FlatBuffers compiler, do not modify

package com.ecs160.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GameModel extends Table {
  public static GameModel getRootAsGameModel(ByteBuffer _bb) { return getRootAsGameModel(_bb, new GameModel()); }
  public static GameModel getRootAsGameModel(ByteBuffer _bb, GameModel obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__init(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public GameModel __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

  public String mockAttribute() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer mockAttributeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }

  public static int createGameModel(FlatBufferBuilder builder,
      int mock_attributeOffset) {
    builder.startObject(1);
    GameModel.addMockAttribute(builder, mock_attributeOffset);
    return GameModel.endGameModel(builder);
  }

  public static void startGameModel(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addMockAttribute(FlatBufferBuilder builder, int mockAttributeOffset) { builder.addOffset(0, mockAttributeOffset, 0); }
  public static int endGameModel(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
  public static void finishGameModelBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

